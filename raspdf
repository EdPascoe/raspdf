#!/usr/bin/env python
"""
Generate PDF reports designed to interact well with rascal.
Replacement for the old xxpdf program.
"""

import logging
import RascalPDF
import optparse
import os, sys, time, tempfile

log = logging.getLogger("root")

formatter = logging.Formatter("%(levelname)s %(module)s:%(lineno)d: %(message)s")
output = logging.StreamHandler()
output.setFormatter(formatter)
log.addHandler(output)
log.setLevel(logging.WARNING)

if __name__ == "__main__":
  usage = "Usage: %prog [<options>] \n" + __doc__+"\n"
  parser = optparse.OptionParser(usage)
  parser.add_option("--sz", "--zmodem", dest="zmodem", action="store_true", help="After generating the pdf file transfer via zmodem")
  parser.add_option("--evince", dest="evince", action="store_true", help="After generating the pdf file display using evince")
  parser.add_option("--verbose", dest="verbose", action="store_true", help="Show debugging information")
  parser.add_option("--debug", dest="debug", action="store_true", help="Show debugging information")
  parser.add_option("-f", "--outputfile", dest="outputfile", type="string", help="Send output to file with given name instead of a temp file.")

  (options, args) = parser.parse_args()
  if options.verbose:  log.setLevel(logging.INFO)
  if options.debug:  log.setLevel(logging.DEBUG)

  start= time.time()
  outfile = options.outputfile
  if not options.outputfile:
    tf = tempfile.NamedTemporaryFile(suffix='_auto.pdf' ) #Temporary file with the work auto in it to force auto starting in terraterm.
    outfile = tf.name
    log.debug("Outfile: %s", outfile)
  c = RascalPDF.PrintJob(output=outfile )
    
  if args: c.feed(file(args[0]))
  else: c.feed(sys.stdin)

  stop = time.time()
  log.info("Render time: %s seconds" % (stop - start))
  
  if options.evince:
    os.system("evince %s" % (outfile))
  if options.zmodem:
    os.system("sz -e %s" % (outfile))

